{
  "telemetry.telemetryLevel": "off",
  "crashReporting.enabled": "off",
  "redhat.telemetry.enabled": false,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "rust-analyzer.cachePriming.enable": true,
  "rust-analyzer.cargo.extraEnv": {
    "RUSTFLAGS": "-A dead_code"
  },
  "eslint.rules.customizations": [
    {
      "rule": "*",
      "severity": "warn"
    }
  ],
  "eslint.workingDirectories": [
    {
      "pattern": "src/*/"
    }
  ],
  "eslint.useFlatConfig": true,
  "editor.tabSize": 2,
  "tailwindCSS.experimental.classRegex": [
    [
      "cva\\(([^)]*)\\)",
      "[\"'`]([^\"'`]*).*?[\"'`]"
    ],
    [
      "cx\\(([^)]*)\\)",
      "(?:'|\"|`)([^']*)(?:'|\"|`)"
    ]
  ],
  "todohighlight.isEnable": true,
  "todohighlight.isCaseSensitive": false,
  "todohighlight.keywords": [
    "FIXME:", // without further details, this will use the defaultStyle
    "REVIEW:", // as will this
    // now for a more complex example
    {
      "text": "INFO:", // without a defined regex pattern this is the string that will be matched
      "color": "green",
      "backgroundColor": "rgba(0,0,0,0)", // INFO: setting the last parameter to zero (alpha channel) disables the background colour
      "border": "none",
      "isWholeLine": false
    },
    {
      "text": "WARNING:",
      "before": {
        "contentText": "⚠️" // adds text before the highlight
      },
      "after": {
        "contentText": "⚠️" // adds text after the highlight
      },
      "color": "red",
      "border": "1px solid red",
      "borderRadius": "2px", // NOTE: use borderRadius along with `border` or you will see nothing change
      "backgroundColor": "rgba(0,0,0,.2)",
      "diagnosticSeverity": "warning" // Set diagnostic severity to `none`, `information`, `warning` or `error`
    },
    {
      "text": "TODO(string):", // with a regex pattern defined, this setting isn't used, but is useful as a name for this section
      "regex": {
        "pattern": "(?<=^|\"|\\s)TODO(\\(\\w+\\))?:" // this allows for TODO: or TODO(Bob): etc.
      },
      "color": "red",
      "border": "1px solid red",
      "borderRadius": "2px", //NOTE: use borderRadius along with `border` or you will see nothing change
      "backgroundColor": "rgba(0,0,0,.2)"
    },
    {
      "text": "NOTE:", // with a regex pattern defined, this setting isn't used, but is useful as a name for this section
      "color": "#ff0000",
      "backgroundColor": "yellow",
      "overviewRulerColor": "grey",
      "regex": {
        "pattern": "(?<=^|\"|\\s)NOTE[:]?(?!\\w)" // in this example, highlight `NOTE:` with or without the `:` and that's not part of another word.  (I.e.: The above will highlight 'NOTE' but not the "note" in 'SIDENOTE').
        /**
                 * Positive lookbehind (`(?<=...)`) is only supported in Node.js v9 and up.
                 * If your VSCode version is built on an earlier version the example above may not work. Simple tests:
                        * Shouldn't work: note  deNOTEd  NOTEing
                        * Should work: NOTE:  "NOTE:"
                 **/
      },
      "isWholeLine": false
    },
  ],
  "todohighlight.keywordsPattern": "(todo|TODO)(\\(.+\\))?:.*",
  "todohighlight.defaultStyle": {
    "color": "red",
    "backgroundColor": "#ffab00",
    "overviewRulerColor": "#ffab00",
    "cursor": "pointer",
    "border": "1px solid #eee",
    "borderRadius": "2px",
    "isWholeLine": false,
    //other styling properties goes here ... 
  },
  "todohighlight.include": [
    "**/*.rs",
    "**/*.ts",
    "**/*.tsx",
    "**/*.html",
    "**/*.css",
    "**/*.md",
    "**/*.txt"
  ],
  "todohighlight.exclude": [
    "**/node_modules/**",
    "**/dist/**",
    "**/build/**",
    "**/target/**",
    "**/.vscode/**",
    "**/*.min.*",
    "**/*.map",
    "**/.next/**"
  ],
  "todohighlight.maxFilesForSearch": 5120,
  "todohighlight.toggleURI": false,
  "todohighlight.enableDiagnostics": true,
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "[xml]": {
    "editor.defaultFormatter": "dotjoshjohnson.xml"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml"
  },
  "files.associations": {
    "Entitlements.plist": "xml"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  }
}
